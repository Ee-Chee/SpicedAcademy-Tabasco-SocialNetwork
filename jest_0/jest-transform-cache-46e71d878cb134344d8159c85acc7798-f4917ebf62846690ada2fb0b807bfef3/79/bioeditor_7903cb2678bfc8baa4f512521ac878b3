b8339ffaa6876e636da9476460404ddb
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _axios = _interopRequireDefault(require("./axios"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BioEditor =
/*#__PURE__*/
function (_React$Component) {
  _inherits(BioEditor, _React$Component);

  function BioEditor(props) {
    var _this;

    _classCallCheck(this, BioEditor);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BioEditor).call(this, props));
    _this.state = {};
    _this.biotext;
    _this.submit = _this.submit.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(BioEditor, [{
    key: "submit",
    value: function submit() {
      var _this2 = this;

      _axios["default"].post("/bioinput", {
        bio: this.biotext
      }).then(function (resp) {
        // console.log("return", resp.data.rows[0].biotext);
        if (!resp.data.rows[0].biotext) {
          _this2.setState({
            added: false
          });
        } //if no biodata, restart again because no data added


        _this2.setState({
          toggleBioTextField: false
        });

        _this2.props.bioHandler([resp.data.rows[0].biotext, _this2.state.toggleBioTextField]); // console.log(this.state.toggleBioTextField);

      });
    } //the biotext must be passed to mounted function so that, it appears on the page after user relogin.
    //Supposingly, pass it to grandparent App <= profile <=bioeditor. But when using short-cut approach, straight away modify only biodata function on App grandparent

  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return _react["default"].createElement("div", null, !this.props.bioData && !this.state.added && _react["default"].createElement("button", {
        onClick: function onClick() {
          _this3.setState({
            toggleBioTextField: true,
            added: true
          });
        }
      }, "Add your bio now!"), this.state.toggleBioTextField && //if two elements/tags needed, pack them up
      _react["default"].createElement("div", null, _react["default"].createElement("textarea", {
        // type="text"
        rows: "5",
        cols: "20",
        placeholder: "More about you...",
        defaultValue: this.props.bioData,
        onChange: function onChange(e) {
          _this3.biotext = e.target.value;
        }
      }), _react["default"].createElement("button", {
        onClick: this.submit
      }, "Save")), this.props.bioData && !this.state.toggleBioTextField && _react["default"].createElement("div", null, this.props.bioData, _react["default"].createElement("button", {
        onClick: function onClick() {
          return _this3.setState({
            toggleBioTextField: true
          });
        }
      }, "Edit")));
    }
  }]);

  return BioEditor;
}(_react["default"].Component); //this.props.bioData refers to the data/bio saved in database!!!
//USE only {} and "" inside Return!!!!. This is JSL rule


exports["default"] = BioEditor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpb2VkaXRvci5qcyJdLCJuYW1lcyI6WyJCaW9FZGl0b3IiLCJwcm9wcyIsInN0YXRlIiwiYmlvdGV4dCIsInN1Ym1pdCIsImJpbmQiLCJheGlvcyIsInBvc3QiLCJiaW8iLCJ0aGVuIiwicmVzcCIsImRhdGEiLCJyb3dzIiwic2V0U3RhdGUiLCJhZGRlZCIsInRvZ2dsZUJpb1RleHRGaWVsZCIsImJpb0hhbmRsZXIiLCJiaW9EYXRhIiwiZSIsInRhcmdldCIsInZhbHVlIiwiUmVhY3QiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsUzs7Ozs7QUFDakIscUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTs7QUFDZixtRkFBTUEsS0FBTjtBQUNBLFVBQUtDLEtBQUwsR0FBYSxFQUFiO0FBQ0EsVUFBS0MsT0FBTDtBQUNBLFVBQUtDLE1BQUwsR0FBYyxNQUFLQSxNQUFMLENBQVlDLElBQVosK0JBQWQ7QUFKZTtBQUtsQjs7Ozs2QkFFUTtBQUFBOztBQUNMQyx3QkFBTUMsSUFBTixDQUFXLFdBQVgsRUFBd0I7QUFBRUMsUUFBQUEsR0FBRyxFQUFFLEtBQUtMO0FBQVosT0FBeEIsRUFBK0NNLElBQS9DLENBQW9ELFVBQUFDLElBQUksRUFBSTtBQUN4RDtBQUNBLFlBQUksQ0FBQ0EsSUFBSSxDQUFDQyxJQUFMLENBQVVDLElBQVYsQ0FBZSxDQUFmLEVBQWtCVCxPQUF2QixFQUFnQztBQUM1QixVQUFBLE1BQUksQ0FBQ1UsUUFBTCxDQUFjO0FBQUVDLFlBQUFBLEtBQUssRUFBRTtBQUFULFdBQWQ7QUFDSCxTQUp1RCxDQUl0RDs7O0FBQ0YsUUFBQSxNQUFJLENBQUNELFFBQUwsQ0FBYztBQUFFRSxVQUFBQSxrQkFBa0IsRUFBRTtBQUF0QixTQUFkOztBQUNBLFFBQUEsTUFBSSxDQUFDZCxLQUFMLENBQVdlLFVBQVgsQ0FBc0IsQ0FDbEJOLElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxJQUFWLENBQWUsQ0FBZixFQUFrQlQsT0FEQSxFQUVsQixNQUFJLENBQUNELEtBQUwsQ0FBV2Esa0JBRk8sQ0FBdEIsRUFOd0QsQ0FXeEQ7O0FBQ0gsT0FaRDtBQWFILEssQ0FFRDtBQUNBOzs7OzZCQUVTO0FBQUE7O0FBQ0wsYUFDSSw2Q0FDSyxDQUFDLEtBQUtkLEtBQUwsQ0FBV2dCLE9BQVosSUFBdUIsQ0FBQyxLQUFLZixLQUFMLENBQVdZLEtBQW5DLElBQ0c7QUFDSSxRQUFBLE9BQU8sRUFBRSxtQkFBTTtBQUNYLFVBQUEsTUFBSSxDQUFDRCxRQUFMLENBQWM7QUFDVkUsWUFBQUEsa0JBQWtCLEVBQUUsSUFEVjtBQUVWRCxZQUFBQSxLQUFLLEVBQUU7QUFGRyxXQUFkO0FBSUg7QUFOTCw2QkFGUixFQWFLLEtBQUtaLEtBQUwsQ0FBV2Esa0JBQVgsSUFDRztBQUNBLG1EQUNJO0FBQ0k7QUFDQSxRQUFBLElBQUksRUFBQyxHQUZUO0FBR0ksUUFBQSxJQUFJLEVBQUMsSUFIVDtBQUlJLFFBQUEsV0FBVyxFQUFDLG1CQUpoQjtBQUtJLFFBQUEsWUFBWSxFQUFFLEtBQUtkLEtBQUwsQ0FBV2dCLE9BTDdCO0FBTUksUUFBQSxRQUFRLEVBQUUsa0JBQUFDLENBQUMsRUFBSTtBQUNYLFVBQUEsTUFBSSxDQUFDZixPQUFMLEdBQWVlLENBQUMsQ0FBQ0MsTUFBRixDQUFTQyxLQUF4QjtBQUNIO0FBUkwsUUFESixFQVdJO0FBQVEsUUFBQSxPQUFPLEVBQUUsS0FBS2hCO0FBQXRCLGdCQVhKLENBZlIsRUE2QkssS0FBS0gsS0FBTCxDQUFXZ0IsT0FBWCxJQUFzQixDQUFDLEtBQUtmLEtBQUwsQ0FBV2Esa0JBQWxDLElBQ0csNkNBQ0ssS0FBS2QsS0FBTCxDQUFXZ0IsT0FEaEIsRUFFSTtBQUNJLFFBQUEsT0FBTyxFQUFFO0FBQUEsaUJBQ0wsTUFBSSxDQUFDSixRQUFMLENBQWM7QUFBRUUsWUFBQUEsa0JBQWtCLEVBQUU7QUFBdEIsV0FBZCxDQURLO0FBQUE7QUFEYixnQkFGSixDQTlCUixDQURKO0FBNENIOzs7O0VBeEVrQ00sa0JBQU1DLFMsR0EwRTdDO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBheGlvcyBmcm9tIFwiLi9heGlvc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmlvRWRpdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7fTtcclxuICAgICAgICB0aGlzLmJpb3RleHQ7XHJcbiAgICAgICAgdGhpcy5zdWJtaXQgPSB0aGlzLnN1Ym1pdC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHN1Ym1pdCgpIHtcclxuICAgICAgICBheGlvcy5wb3N0KFwiL2Jpb2lucHV0XCIsIHsgYmlvOiB0aGlzLmJpb3RleHQgfSkudGhlbihyZXNwID0+IHtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJyZXR1cm5cIiwgcmVzcC5kYXRhLnJvd3NbMF0uYmlvdGV4dCk7XHJcbiAgICAgICAgICAgIGlmICghcmVzcC5kYXRhLnJvd3NbMF0uYmlvdGV4dCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGFkZGVkOiBmYWxzZSB9KTtcclxuICAgICAgICAgICAgfSAvL2lmIG5vIGJpb2RhdGEsIHJlc3RhcnQgYWdhaW4gYmVjYXVzZSBubyBkYXRhIGFkZGVkXHJcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyB0b2dnbGVCaW9UZXh0RmllbGQ6IGZhbHNlIH0pO1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLmJpb0hhbmRsZXIoW1xyXG4gICAgICAgICAgICAgICAgcmVzcC5kYXRhLnJvd3NbMF0uYmlvdGV4dCxcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUudG9nZ2xlQmlvVGV4dEZpZWxkXHJcbiAgICAgICAgICAgIF0pO1xyXG5cclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5zdGF0ZS50b2dnbGVCaW9UZXh0RmllbGQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vdGhlIGJpb3RleHQgbXVzdCBiZSBwYXNzZWQgdG8gbW91bnRlZCBmdW5jdGlvbiBzbyB0aGF0LCBpdCBhcHBlYXJzIG9uIHRoZSBwYWdlIGFmdGVyIHVzZXIgcmVsb2dpbi5cclxuICAgIC8vU3VwcG9zaW5nbHksIHBhc3MgaXQgdG8gZ3JhbmRwYXJlbnQgQXBwIDw9IHByb2ZpbGUgPD1iaW9lZGl0b3IuIEJ1dCB3aGVuIHVzaW5nIHNob3J0LWN1dCBhcHByb2FjaCwgc3RyYWlnaHQgYXdheSBtb2RpZnkgb25seSBiaW9kYXRhIGZ1bmN0aW9uIG9uIEFwcCBncmFuZHBhcmVudFxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgeyF0aGlzLnByb3BzLmJpb0RhdGEgJiYgIXRoaXMuc3RhdGUuYWRkZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQmlvVGV4dEZpZWxkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZGVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEFkZCB5b3VyIGJpbyBub3chXHJcbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAge3RoaXMuc3RhdGUudG9nZ2xlQmlvVGV4dEZpZWxkICYmIChcclxuICAgICAgICAgICAgICAgICAgICAvL2lmIHR3byBlbGVtZW50cy90YWdzIG5lZWRlZCwgcGFjayB0aGVtIHVwXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0eXBlPVwidGV4dFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3dzPVwiNVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xzPVwiMjBcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJNb3JlIGFib3V0IHlvdS4uLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9e3RoaXMucHJvcHMuYmlvRGF0YX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJpb3RleHQgPSBlLnRhcmdldC52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5zdWJtaXR9PlNhdmU8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5iaW9EYXRhICYmICF0aGlzLnN0YXRlLnRvZ2dsZUJpb1RleHRGaWVsZCAmJiAoXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMucHJvcHMuYmlvRGF0YX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgdG9nZ2xlQmlvVGV4dEZpZWxkOiB0cnVlIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVkaXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcbi8vdGhpcy5wcm9wcy5iaW9EYXRhIHJlZmVycyB0byB0aGUgZGF0YS9iaW8gc2F2ZWQgaW4gZGF0YWJhc2UhISFcclxuLy9VU0Ugb25seSB7fSBhbmQgXCJcIiBpbnNpZGUgUmV0dXJuISEhIS4gVGhpcyBpcyBKU0wgcnVsZVxyXG4iXX0=