{"version":3,"sources":["bioeditor.test.js"],"names":["test","wrapper","expect","find","length","toBe","text","toEqual","only","onClick","jest","fn","simulate","console","log","mock","calls"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,IAAI,CAAC,uCAAD,EAA0C,YAAM;AAChD,MAAMC,OAAO,GAAG,qBAAQ,gCAAC,qBAAD,OAAR,CAAhB;AACAC,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,QAAb,EAAuBC,MAAxB,CAAN,CAAsCC,IAAtC,CAA2C,CAA3C,EAFgD,CAGhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,QAAb,EAAuBG,IAAvB,EAAD,CAAN,CAAsCC,OAAtC,CAA8C,mBAA9C;AACH,CAlBG,CAAJ,C,CAoBA;;AACAP,IAAI,CAAC,4CAAD,EAA+C,YAAM;AACrD,MAAMC,OAAO,GAAG,qBACZ,gCAAC,qBAAD;AAAW,IAAA,OAAO,EAAC;AAAnB,IADY,CAAhB;AAGAC,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,QAAb,EAAuBC,MAAxB,CAAN,CAAsCC,IAAtC,CAA2C,CAA3C;AACAH,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,QAAb,EAAuBG,IAAvB,EAAD,CAAN,CAAsCC,OAAtC,CAA8C,MAA9C;AACH,CANG,CAAJ,C,CAOA;;AAEAP,IAAI,CAACQ,IAAL,CAAU,4EAAV,EAAwF,YAAM;AAC1F,MAAMC,OAAO,GAAGC,IAAI,CAACC,EAAL,EAAhB;AACA,MAAMV,OAAO,GAAG,qBACZ,gCAAC,qBAAD;AACI,IAAA,OAAO,EAAC,kCADZ;AAEI,IAAA,OAAO,EAAEQ;AAFb,IADY,CAAhB;AAOAR,EAAAA,OAAO,CAACW,QAAR,CAAiB,OAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,IAAR,CAAaC,KAAzB,EAV0F,CAW1F;AACA;AACA;AACH,CAdD","sourcesContent":["import React from \"react\";\r\nimport { shallow } from \"enzyme\";\r\nimport BioEditor from \"./bioeditor\";\r\n\r\ntest(\"Add is rendered when no bio is passed\", () => {\r\n    const wrapper = shallow(<BioEditor />);\r\n    expect(wrapper.find(\"button\").length).toBe(1);\r\n    // expect(\r\n    //     wrapper.contains(\r\n    //         <button\r\n    //             onClick={() => {\r\n    //                 this.setState({\r\n    //                     toggleBioTextField: true,\r\n    //                     added: true\r\n    //                 });\r\n    //             }}\r\n    //         >\r\n    //             Add your bio now!\r\n    //         </button>\r\n    //     )\r\n    // ).toBe(true);\r\n    expect(wrapper.find(\"button\").text()).toEqual(\"Add your bio now!\");\r\n});\r\n\r\n//test.only(...) is used to run for a particular selected test of this file\r\ntest(\"Edit is rendered when a bio text is passed\", () => {\r\n    const wrapper = shallow(\r\n        <BioEditor bioData=\"some random text for bio testing\" />\r\n    );\r\n    expect(wrapper.find(\"button\").length).toBe(1);\r\n    expect(wrapper.find(\"button\").text()).toEqual(\"Edit\");\r\n});\r\n//\"Edit\" string is case sensitive\r\n\r\ntest.only(\"clicking Add or Edit button causes textarea and Save button to be rendered\", () => {\r\n    const onClick = jest.fn();\r\n    const wrapper = shallow(\r\n        <BioEditor\r\n            bioData=\"some random text for bio testing\"\r\n            onClick={onClick}\r\n        />\r\n    );\r\n\r\n    wrapper.simulate(\"click\");\r\n    console.log(onClick.mock.calls);\r\n    // expect(onClick.mock.calls.length).toBe(5);\r\n    // expect(wrapper.find(\"button\").length).toBe(1);\r\n    // expect(wrapper.find(\"button\").text()).toEqual(\"Edit\");\r\n});\r\n"]}